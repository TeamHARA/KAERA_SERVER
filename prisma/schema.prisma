generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model quote {
  id      Int    @id @default(autoincrement())
  content String @db.VarChar(100)
}

model review {
  worry_id   Int      @id
  content    String   @db.VarChar(50)
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
  worry      worry    @relation(fields: [worry_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_worry_id_fk")
}

model template {
  id        Int      @id @default(autoincrement())
  info      String   @db.VarChar(100)
  title     String   @db.VarChar(50)
  shortInfo String?  @db.VarChar(50)
  questions String[] @db.VarChar(50)
  guideline String?  @db.VarChar(50)
  hints     String[] @db.VarChar(100)
  subtitles String[] @db.VarChar(50)
  worry     worry[]
}

model user {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(50)
  email         String?  @db.VarChar(50)
  used_template Int[]
  created_at    DateTime @db.Timestamptz(6)
  updated_at    DateTime @db.Timestamptz(6)
  kakao_id      BigInt?  @unique
  apple_id      Int?     @unique
  age_range     String?  @db.VarChar(5)
  gender        String?  @db.VarChar(6)
  worry         worry[]
}

model worry {
  id           Int       @id @default(autoincrement())
  template_id  Int
  user_id      Int
  title        String    @db.VarChar(50)
  answers      String[]
  created_at   DateTime  @db.Timestamptz(6)
  updated_at   DateTime  @db.Timestamptz(6)
  deadline     DateTime? @db.Date
  final_answer String?   @db.VarChar(50)
  review       review?
  template     template  @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "worry_template_id_fk")
  user         user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "worry_user_id_fk")
}
