openapi: 3.0.0
info:
  version: 1.0.0
  title: KAERA API 명세서
  description: test API
  license:
    name: yelin kim
servers:
  - url: https://api.kaera.site/v1
  - url: http://localhost:3000/v1 #자신의 포트번호

host: localhost:3000/v1

#Paths api 경로 지정
paths: 
  #user  
  /user:
    $ref: './user.yaml#/~1user'
  /user/{userId}:
    $ref: './user.yaml#/~1user~1{userId}'

  #template
  /template:
    $ref: './template.yaml#/~1template'
  /template/{templateId}:
    $ref: './template.yaml#/~1template~1{templateId}'

  #worry
  /worry:
    $ref: './worry.yaml#/~1worry'
  /worry/{worryId}:
    $ref: './worry.yaml#/~1worry~1{worryId}'
  /worry/finalAnswer:
    $ref: './worry.yaml#/~1worry~1finalAnswer'
  /worry/deadline:
    $ref: './worry.yaml#/~1worry~1deadline'
  /worry/list/{isSolved}:
    $ref: './worry.yaml#/~1worry~1list~1{isSolved}'
  /worry/?templateId={templateId}:
    $ref: './worry.yaml#/~1worry~1?templateId={templateId}'


  #review
  /review:
    $ref: './review.yaml#/~1review'




  


components:
  parameters: null
  #Schemas : model 정보
  schemas:
    User:
      properties:
        name:
          type: string
          description: 유저 이름
        email:
          type: string
          description: 이메일 주소

    # Template:
    #   properties:
    #     title:
    #       type: string
    #       description: 템플릿명
    #     info:
    #       type: string
    #       description: 템플릿 간단 설명
    #     guideline:
    #       type: string
    #       description: 템플릿 사용 가이드라인
    #     questions:
    #       type: array
    #       description: 템플릿 질문들
    #     hints:
    #       type: array
    #       description: 템플릿 질문별 힌트들


    Error:
      type: object
      properties:
        status:
          type: number
        success:
          type: boolean
        message:
          type: string

  #-----------------------

  #Examples
  examples:
    userExample:
      value:
        {
          "name": "홍길동",
          "email": "swaggerTest@naver.com",
        }

#Responses 재사용되는 애들
  responses:
    successResponse:
        description: successful request with no data
        content:
          application/json:
            schema:
              type: object
              # example: {"status": 200, "success": true, "message": "message"}
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            status: 400
            success: false
            message: 잘못된 요청
    InternalServerError:
      description: 서버 에러
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            status: 500
            success: false
            message: 서버 내부 오류