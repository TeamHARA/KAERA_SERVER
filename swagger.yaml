openapi: 3.0.0
info:
  version: 1.0.0
  title: KAERA API 명세서
  description: test API
  license:
    name: yelin kim
servers:
  - url: 'https://api.kaera.site/v1'
  - url: 'http://localhost:3000/v1'
security:
  - bearerAuth: []
paths:
  /auth/kakao/login:
    post:
      tags:
        - Auth
      summary: 카카오 회원가입/로그인하기
      consumes:
        - application/json
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                accessToken: 카카오 액세스토큰
                deviceToken: fcm 디바이스토큰
      responses:
        '200':
          description: 회원가입/로그인 성공
          content:
            application/json:
              schema:
                type: object
              examples:
                login_example:
                  value:
                    status: 200
                    success: true
                    message: 로그인 성공
                    data:
                      id: 2
                      name: 김캐라
                      accessToken: 캐라의 jwt 액세스토큰
                      refreshToken: 캐라의 jwt 리프레쉬토큰
                signIn_example:
                  value:
                    status: 200
                    success: true
                    message: 회원가입 성공
                    data:
                      id: 2
                      name: 김캐라
                      accessToken: 캐라의 jwt 액세스토큰
                      refreshToken: 캐라의 jwt 리프레쉬토큰
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/apple/login:
    post:
      tags:
        - Auth
      summary: 애플 회원가입/로그인하기
      consumes:
        - application/json
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                identityToken: apple identity토큰
                user: apple의 유저 식별 스트링
                fullName: 사용자 이름
                deviceToken: fcm 디바이스토큰
      responses:
        '200':
          description: 회원가입/로그인 성공
          content:
            application/json:
              schema:
                type: object
              examples:
                login_example:
                  value:
                    status: 200
                    success: true
                    message: 로그인 성공
                    data:
                      id: 2
                      name: 김캐라
                      accessToken: 캐라의 jwt 액세스토큰
                      refreshToken: 캐라의 jwt 리프레쉬토큰
                signIn_example:
                  value:
                    status: 200
                    success: true
                    message: 회원가입 성공
                    data:
                      id: 2
                      name: 김캐라
                      accessToken: 캐라의 jwt 액세스토큰
                      refreshToken: 캐라의 jwt 리프레쉬토큰
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/token/refresh:
    post:
      tags:
        - Auth
      summary: 토큰 재발급하기
      consumes:
        - application/json
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                accessToken: 만료된 jwt 액세스토큰
                refreshToekn: jwt 리프레쉬토큰
      responses:
        '200':
          description: 토큰 재발급 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 토큰 재발급 성공
                  data:
                    accessToken: 재발급받은 jwt 액세스토큰
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          description: 토큰 재발급 실패
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 401
                  success: false
                  message: 모든 토큰이 만료되었습니다.
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/unregister:
    delete:
      tags:
        - Auth
      summary: 회원탈퇴하기
      consumes:
        - application/json
      responses:
        '200':
          description: 회원 탈퇴 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 회원 탈퇴 성공
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /template:
    get:
      tags:
        - Template
      summary: 템플릿 종류 조회
      responses:
        '200':
          description: 템플릿 종류 조회 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 모든 템플릿 조회 성공
                  data:
                    - templateId: 1
                      title: 템플릿1
                      shortInfo: 간략설명
                      info: 템플릿 1 설명!~!~!
                      hasUsed: true
                    - templateId: 2
                      title: 템플릿2
                      shortInfo: 간략설명
                      info: 템플릿 2 설명!~!~!
                      hasUsed: false
                    - templateId: 3
                      title: 템플릿3
                      shortInfo: 간략설명
                      info: 템플릿 3 설명!~!~!
                      hasUsed: true
                    - templateId: 4
                      title: 템플릿4
                      shortInfo: 간략설명
                      info: 템플릿 4 설명!~!~!
                      hasUsed: false
                    - templateId: 5
                      title: 템플릿5
                      shortInfo: 간략설명
                      info: 템플릿 5 설명!~!~!
                      hasUsed: false
  '/template/{templateId}':
    get:
      tags:
        - Template
      summary: 템플릿 질문 조회
      parameters:
        - in: path
          name: templateId
          required: true
          description: 템플릿 id
          schema:
            type: string
      responses:
        '200':
          description: 템플릿 질문 조회 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 템플릿 조회 성공
                  data:
                    title: 장단점 생각하기
                    guideline: 'A or B? 결정이 어렵다면, 장단점을 비교해 최선을 찾아봐요.'
                    questions:
                      - 고민의 선택지를 나열해보세요.
                      - 선택지들의 장점을 생각해보세요.
                      - 선택지들의 단점을 생각해보세요.
                      - 장점과 단점을 비교해 최선의 방법을 찾아보세요.
                    hints:
                      - 예) 휴학하고 스펙 쌓기 vs 학교 생활하기
                      - |-
                        예) 휴학: 시간을 여유롭게 활용할 수 있다
                             학교: 칼졸업 가능!
                      - |-
                        예) 휴학: 비효율적인 시간 관리가 우려된다
                             학교: 취업 준비의 여유가 없다
                      - 예) 휴학 기간 동안 참여할 대외활동 리스트를 세워두자
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /worry:
    post:
      tags:
        - Worry
      summary: 고민 작성하기
      consumes:
        - application/json
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              properties:
                templateId:
                  type: number
                  description: 템플릿 id
                title:
                  type: string
                  description: 고민 제목
                answers:
                  type: array
                  items:
                    type: string
                  description: 질문에 대한 답변들
                deadline:
                  type: number
                  description: 데드라인
            examples:
              example_with_deadline:
                value:
                  templateId: 2
                  title: 고민고민
                  answers:
                    - a
                    - b
                    - c
                    - d
                  deadline: 6
              example_with_no_deadline:
                value:
                  templateId: 2
                  title: 고민고민
                  answers:
                    - a
                    - b
                    - c
                    - d
                  deadline: -1
      responses:
        '200':
          description: 고민 작성 성공
          content:
            application/json:
              schema:
                type: object
              examples:
                withDeadline:
                  value:
                    status: 200
                    success: true
                    message: 고민 생성 성공
                    data:
                      worryId: 524
                      title: 고민고민
                      templateId: 2
                      answers:
                        - a
                        - b
                        - c
                        - d
                      createdAt: '2023-12-21'
                      deadline: '2023-12-27'
                      dDay: -6
                withNoDeadline:
                  value:
                    status: 200
                    success: true
                    message: 고민 생성 성공
                    data:
                      worryId: 524
                      title: 고민고민
                      templateId: 2
                      answers:
                        - a
                        - b
                        - c
                        - d
                      createdAt: '2023-12-21'
                      deadline: 데드라인이 없습니다
                      dDay: -888
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - Worry
      summary: 고민 수정하기
      consumes:
        - application/json
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              properties:
                worryId:
                  type: number
                  description: 고민 id
                templateId:
                  type: number
                  description: 템플릿 id
                title:
                  type: string
                  description: 고민 제목
                answers:
                  type: array
                  items:
                    type: string
                  description: 질문에 대한 답변들
                deadline:
                  type: number
                  description: 데드라인
            example:
              worryId: 2
              templateId: 1
              title: 졸업후의 나
              answers:
                - 11이번 시험 망칠까봐 걱정된다.이번 시험 망칠까봐 걱정된다.이번 시험 망칠까봐 걱정된다.
                - 22이번 시험 망칠까봐 걱정된다.이번 시험 망칠까봐 걱정된다.이번 시험 망칠까봐 걱정된다.
                - 33이번 시험 망칠까봐 걱정된다.이번 시험 망칠까봐 걱정된다.이번 시험 망칠까봐 걱정된다.
                - 44이번 시험 망칠까봐 걱정된다.이번 시험 망칠까봐 걱정된다.이번 시험 망칠까봐 걱정된다.
      responses:
        '200':
          description: 고민 수정 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 고민 수정 성공
                  data:
                    updatedAt: '2022-10-10'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/worry/{worryId}':
    delete:
      tags:
        - Worry
      summary: 고민 삭제하기
      parameters:
        - in: path
          name: worryId
          required: true
          description: 고민 id
          schema:
            type: string
      responses:
        '200':
          description: 고민 삭제 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 고민 삭제 성공
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Worry
      summary: 고민 상세 조회하기
      parameters:
        - in: path
          name: worryId
          required: true
          description: 고민 id
          schema:
            type: string
      responses:
        '200':
          description: 고민 상세조회 성공
          content:
            application/json:
              schema:
                type: object
              examples:
                notFinishedWorry:
                  value:
                    status: 200
                    success: true
                    message: 고민 상세조회 성공
                    data:
                      title: 고민고민
                      templateId: 2
                      subtitles:
                        - 고민의 선택지
                        - 선택지의 장점
                        - 선택지의 단점
                        - 장점과 단점의 비교
                      answers:
                        - a
                        - b
                        - c
                        - d
                      period: 아직 고민중인 글입니다.
                      updatedAt: '2023-12-21'
                      deadline: '2023-12-27'
                      dDay: -6
                      finalAnswer: ''
                      review:
                        content: ''
                        updatedAt: ''
                finishedWorryWithNoReview:
                  value:
                    status: 200
                    success: true
                    message: 고민 상세조회 성공
                    data:
                      title: 12/21일에 생성
                      templateId: 4
                      subtitles:
                        - 고민의 최종 목표
                        - 목표를 위한 준비
                        - 올해 안에 할 수 있는 실천
                        - 오늘 당장 할 수 있는 실천
                      answers:
                        - a
                        - b
                        - c
                        - d
                      period: 2023-12-21 ~ 2023-12-21
                      updatedAt: '2023-12-21'
                      deadline: 데드라인이 없습니다.
                      dDay: -888
                      finalAnswer: 결정했다..!
                      review:
                        content: ''
                        updatedAt: '2023-12-21'
                finishedWorryWithReview:
                  value:
                    status: 200
                    success: true
                    message: 고민 상세조회 성공
                    data:
                      title: 12/20일에 생성
                      templateId: 4
                      subtitles:
                        - 고민의 최종 목표
                        - 목표를 위한 준비
                        - 올해 안에 할 수 있는 실천
                        - 오늘 당장 할 수 있는 실천
                      answers:
                        - a
                        - b
                        - c
                        - d
                      period: 2023-12-20 ~ 2023-12-21
                      updatedAt: '2023-12-21'
                      deadline: '2023-12-26'
                      dDay: 0
                      finalAnswer: 결정했다..!
                      review:
                        content: 리뷰
                        updatedAt: '2023-12-21'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /worry/finalAnswer:
    patch:
      tags:
        - Worry
      summary: 최종결정 등록하기
      consumes:
        - application/json
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              properties:
                worryId:
                  type: number
                  description: 고민 id
                finalAnswer:
                  type: string
                  description: 최종답변
            example:
              worryId: 1
              finalAnswer: 해카라쿠배 지원하기
      responses:
        '200':
          description: 최종결정 등록 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 최종결정 등록 성공
                  data:
                    quote: '고민하면서 길을 찾는 사람들, 그들은 참된 인간상이다.'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /worry/deadline:
    patch:
      tags:
        - Worry
      summary: 데드라인 수정하기
      consumes:
        - application/json
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              properties:
                worryId:
                  type: number
                  description: 고민 id
                dayCount:
                  type: number
                  description: 며칠 후
            example:
              worryId: 1
              dayCount: 13
      responses:
        '200':
          description: 데드라인 수정 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 데드라인 수정 성공
                  data:
                    deadline: '2023-12-31'
                    dDay: -5
  '/worry/{isSolved}/list?page={page}&limit={limit}':
    get:
      tags:
        - Worry
      summary: 고민목록 조회하기
      parameters:
        - in: path
          name: isSolved
          required: true
          description: 고민해결 여부
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: string
          required: true
        - in: query
          name: limit
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 고민목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 고민목록 조회 성공
                  data:
                    - worryId: 1
                      templateId: 2
                      title: 고민제목1
                    - worryId: 2
                      templateId: 1
                      title: 고민제목2
                    - worryId: 3
                      templateId: 3
                      title: 고민제목3
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/worry?templateId={templateId}':
    get:
      tags:
        - Worry
      summary: 템플릿별 고민목록 조회하기
      parameters:
        - in: query
          name: templateId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 템플릿별 고민목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 템플릿별 고민목록 조회 성공
                  data:
                    totalNum: 3
                    worry:
                      - worryId: 1
                        title: 고민1
                        period: 2023-01-01 ~ 2023-03-02
                      - worryId: 2
                        title: 고민2
                        period: 2023-02-28 ~ 2023-03-14
                      - worryId: 3
                        title: 고민3
                        period: 2020-11-11 ~ 2021-05-06
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /review:
    put:
      tags:
        - Review
      summary: 나의 기록 등록 및 수정하기
      consumes:
        - application/json
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              properties:
                worryId:
                  type: number
                  description: 고민 id
                review:
                  type: string
                  description: 나의 기록
            example:
              worryId: 1
              review: 후기이이ㅣㅣㅣㅣㅣ~!
      responses:
        '200':
          description: 나의 기록 등록 및 수정 성공
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  success: true
                  message: 나의 기록 등록/수정 성공
                  data:
                    updatedAt: '2019-10-01'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters: null
  schemas:
    User:
      properties:
        name:
          type: string
          description: 유저 이름
        email:
          type: string
          description: 이메일 주소
    Error:
      type: object
      properties:
        status:
          type: number
        success:
          type: boolean
        message:
          type: string
  examples:
    userExample:
      value:
        name: 홍길동
        email: swaggerTest@naver.com
  responses:
    successResponse:
      description: successful request with no data
      content:
        application/json:
          schema:
            type: object
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 400
            success: false
            message: 잘못된 요청
    InternalServerError:
      description: 서버 에러
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 500
            success: false
            message: 서버 내부 오류
